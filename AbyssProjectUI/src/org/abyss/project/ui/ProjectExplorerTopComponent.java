/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *//*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.abyss.project.ui;

import org.abyss.api.models.AbyssProject;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.abyss.project.ui//ProjectExplorer//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ProjectExplorerTopComponent",
        iconBase = "org/abyss/project/ui/icons/project.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.abyss.project.ui.ProjectExplorerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ProjectExplorerAction",
        preferredID = "ProjectExplorerTopComponent"
)
@Messages({
    "CTL_ProjectExplorerAction=ProjectExplorer",
    "CTL_ProjectExplorerTopComponent=ProjectExplorer Window",
    "HINT_ProjectExplorerTopComponent=This is a ProjectExplorer window"
})
public final class ProjectExplorerTopComponent extends TopComponent implements LookupListener {
    private final transient ExplorerManager explorerManager = new ExplorerManager();
    private Lookup.Result<AbyssProject> result = null;
    
    public ProjectExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_ProjectExplorerTopComponent());
        setToolTipText(Bundle.HINT_ProjectExplorerTopComponent());
        
        associateLookup(ExplorerUtils.createLookup(explorerManager, getActionMap()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JPanel();
        explorerView = new BeanTreeView();
        editorToolbar = new javax.swing.JToolBar();

        setLayout(new java.awt.BorderLayout());

        rootPanel.setLayout(new java.awt.GridLayout(1, 1));
        rootPanel.add(explorerView);

        add(rootPanel, java.awt.BorderLayout.CENTER);

        editorToolbar.setRollover(true);
        add(editorToolbar, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar editorToolbar;
    private javax.swing.JScrollPane explorerView;
    private javax.swing.JPanel rootPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        result = Utilities.actionsGlobalContext().lookupResult(AbyssProject.class);
        result.addLookupListener (this);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        result.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }
    
    @Override
    public void resultChanged(LookupEvent le) {
        /*
        Collection<? extends Event> allEvents = result.allInstances();
        if (!allEvents.isEmpty()) {
            Event event = allEvents.iterator().next();
            jLabel1.setText(Integer.toString(event.getIndex()));
            jLabel2.setText(event.getDate().toString());
        } else {
            jLabel1.setText("[no selection]");
            jLabel2.setText("");
        }
        */
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
